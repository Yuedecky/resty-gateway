events {
	worker_connections 1024;
}

http {

	charset UTF-8;

	log_format  main '$remote_addr - $remote_user [$time_local] "$request" '
 	sendfile        on;
    keepalive_timeout  65;


	lua_package_path '../?.lua;/usr/local/lor/?.lua;;';
	lua_code_cache on;

	lua_shared_dict orange_data 20m;

	lua_shared_dict status 1m; ## 用于waf应用防火墙
	lua_shared_dict rate_limit 10m; ## 用于限流
	lua_shared_dict monitor 10m; #用于url监控数据

	lua_shared_dict seassoon_data 10m;  用于保存 数据库 的缓存信息
	upstream default_upstream {
        server localhost:8001;
    }
	init_by_lua_block {
		local app = require("app.app")
		local app_env_conf = os.getenv("SEASSOON_CONF") ## 需要配置环境变量 `SEASSOON_CONF` (不区分大小写)
		print(string.char(27) .. "[34m" .. "[INFO]" .. string.char(27).. "[0m", [[the env[SEASSOON_CONF] is ]], app_env_conf)






	}
	server {
		listen 80;
		ssl_session_tickets off;	
		set $session_identifier_generator random;
		location / {
			access_log off;
		    default_type application/json;
		    set $jwt_secret "seassoon:auth:jwt_";
		    access_by_lua_file ../app/oauth2/oauth2.lua;
		}

		location ^/api/([-_a-zA-Z0-9/]+) {
			access_by_lua_file lua/access_filter.lua;
			content_by_lua_file lua/content_filter.lua;
		}
	}
}